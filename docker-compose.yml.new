services:
  php:
    hostname: php.magento2.docker
    image: 'the_it_nerd/magento2-php:8.3'
    build:
      context: ./docker/FrankenPHP
      args:
        USER_ID: 1000
        GROUP_ID: 1000
    env_file: ./docker/FrankenPHP/config.env
    volumes:
      - '.:/app:delegated'
      - ./docker/FrankenPHP/Caddy/Caddyfile:/etc/caddy/Caddyfile:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - MAGENTO_RUN_MODE=developer
      - MAGE_RUN_TYPE=website
      - MAGE_RUN_CODE=base
      - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip xsl sodium xdebug gmp'
      - 'SENDMAIL_PATH=/usr/sbin/sendmail -t -i -S mailpit:1025'
    networks:
      magento:
        aliases:
          - php.magento2.docker
    depends_on:
      - db
      - redis
      - rabbitmq
      - opensearch
      - mailpit
    ports:
      - "8080:80"
  web:
    hostname: web.magento2.docker
    image: openresty/openresty:1.21.4.2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # OpenResty main config
      - ./docker/OpenResty/nginx.conf:/etc/nginx/nginx.conf:ro
      # Default server config (referenced in nginx.conf)
      - ./docker/OpenResty/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      # Magento static/media (served directly or proxied - depends on config)
      # - ./src/pub/static:/app/pub/static:ro
      # - ./src/pub/media:/app/pub/media:ro
      # SSL certificates
      - ./docker/OpenResty/ssl:/etc/nginx/ssl:ro
    networks:
      magento:
        aliases:
          - web.magento2.docker
  varnish:
    hostname: varnish.magento2.docker
    image: varnish:6.0.13 # Use a specific stable version
    volumes:
      - ./docker/Varnish/default.vcl:/etc/varnish/default.vcl:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: [ "varnishd", "-F", "-f", "/etc/varnish/default.vcl", "-a", ":80", "-s", "malloc,${VARNISH_MEMORY:-256m}" ]
    depends_on:
      - php
    networks:
      magento:
        aliases:
          - varnish.magento2.docker
  db:
    hostname: db.magento2.docker
    image: 'mariadb:10.6'
    shm_size: 2gb
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
    ports:
      - '3306:3306'
    volumes:
      - '.:/app:delegated'
      - 'magento-db:/var/lib/mysql'
    healthcheck:
      test: 'mysqladmin ping -h localhost -pmagento2'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - db.magento2.docker
  redis:
    hostname: redis.magento2.docker
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    volumes:
      - '.:/app:delegated'
    ports:
      - "6379:6379"
    sysctls:
      net.core.somaxconn: 4098
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    healthcheck:
      test: 'redis-cli ping || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - redis.magento2.docker
  rabbitmq:
    hostname: rabbitmq.magento2.docker
    image: 'rabbitmq:3.13'
    networks:
      magento:
        aliases:
          - rabbitmq.magento2.docker
  mailpit:
    hostname: mailpit.magento2.docker
    image: axllent/mailpit:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      magento:
        aliases:
          - mailpit.magento2.docker
  opensearch:
    build:
      context: docker/OpenSearch
    environment:
      # IMPORTANT: Disable security ONLY for local development
      - plugins.security.disabled=true
      - discovery.type=single-node
      # Adjust memory limits as needed
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "${OPENSEARCH_PORT:-9200}:9200"
      - "${OPENSEARCH_PERF_PORT:-9600}:9600" # Performance Analyzer
    volumes:
      - magento-opensearch:/usr/share/opensearch/data
    networks:
      magento:
        aliases:
          - opensearch.magento2.docker
volumes:
  magento-db: { }
  magento-opensearch: { }
networks:
  magento:
    driver: bridge
